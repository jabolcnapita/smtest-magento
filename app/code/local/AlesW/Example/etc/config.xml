<?xml version="1.0"?>
<!--
/**
 * app/code/local/AlesW/Example/etc/config.xml
 */
-->
<config>
    <modules>
        <AlesW_Example> 								     <!-- Module name Namespace_ModuleName -->
            <version>0.0.3</version>
        </AlesW_Example>
    </modules>
    <global> 	
    	<!-- Class path definitions for Models -->												
        <models> 											
            <example>                                               <!-- group name whzich should match modul name -->
                <class>AlesW_Example_Model</class>       <!-- basename all models in example group will have (class prefix)-->
                <!-- use resources staded below -->
                <resourceModel>example_resource</resourceModel>     <!-- which resource model example group will use -->
            </example>
            <!-- Mapping models to DB tables-->
            <example_resource>
                <class>AlesW_Example_Model_Resource</class> <!-- Packagename_Modulename_Model_Resource -->
                <entities>   
                                                                     <!-- entity corresponds to a table -->
                    <event>
                        <table>smtest_event</table>              <!-- Define Model Event in Models/Event.php -->
                    </event>
                    
                    <!--
                    <changelog>
                        <table>smtest_changelog</table>
                    </changelog>
                    -->
                    
                </entities>
            </example_resource>
        </models>
        <!-- For setup script for DB table creation -->
        <resources>
            <example_setup>                                         <!-- this resource must match subfolder Example/sql/example_setup/mysql4-upgrade-0.0.0-0.0.1.php -->
                <setup>                                             <!-- mysql4-upgrade-0.0.0-0.0.1.php name uses current Module version which is 0.0.0 and upgrade to 0.0.1 -->
                    <module>AlesW_Example</module>
                    <class>Mage_Core_Model_Resource_Setup</class>   <!-- we are using Core class so we only need sql script in Example/sql/ -->
                </setup>
            </example_setup>
        </resources>
        <!-- Class path definitions for Blocks -->	
        <blocks>
            <example>
                <class>AlesW_Example_Block</class>
            </example>
            <!-- rewrite to add tab -->
            <adminhtml>
                <rewrite>
                    <catalog_product_edit_tabs>AlesW_Example_Block_Adminhtml_Catalog_Product_Edit_Tabs</catalog_product_edit_tabs>
                </rewrite>
            </adminhtml>            
        </blocks>
        <!-- Class path definitions for Helpers -->	
        <helpers>
            <example>
                <class>AlesW_Example_Helper</class>
            </example>
        </helpers>
        <!-- Observe events -->
        <events>
            <controller_action_predispatch>                             <!-- observing controller_action_predispatch event -->
                <observers>
                    <example_observer>
                        <class>example/observer</class>                 <!-- observer model should be in Example module within Model folder .. Observer.php -->
                        <method>controllerActionPredispatch</method>
                    </example_observer>
                </observers>
            </controller_action_predispatch>

            <catalog_product_save_before>                               <!-- observe the event -->
                <observers>
                    <example_observer>
                        <class>example/observer</class>
                        <method>catalogProductSaveBefore</method>
                    </example_observer>
                </observers>
            </catalog_product_save_before>            
        </events>        
    </global>
    <!-- Define backend router -->
    <admin>
        <routers>
            <adminhtml>
                <args>
                    <modules>
                        <!-- using existing Adminhtml frontname by telling Magento our Example module will also process URL with adminhtml frontname -->
                        <!-- Classpath will be AlesW_Example_Adminhtml meaning we need Adminhtml folder inside Example/controllers folder -->
                        <example before="Mage_Adminhtml">AlesW_Example_Adminhtml</example>
                    </modules>
                </args>
            </adminhtml>
        </routers>
    </admin>    
    <!-- Create new frontend router -->
    <frontend>
        <routers>
            <example>
                <use>standard</use>
                <args>
                    <frontName>example</frontName>                  <!-- anything begining with example in the URL (domain/example/) will be routed to our controller -->
                    <module>AlesW_Example</module>
                </args>
            </example>
        </routers>
        <!-- proccess additional layout file example.xml -->
        <layout>
            <updates>
                <example>
                    <file>example.xml</file>                        <!-- in app/design/frontend/base/default/layout/ -->
                </example>
            </updates>
        </layout>
    </frontend>    

    <adminhtml>
        <layout>                                                    <!-- Add Product tab via layout -->
            <updates>
                <example>
                    <file>example.xml</file>                        <!-- in app/design/adminhtml/default/default/layout/ -->
                </example>>
            </updates>
        </layout> 
    </adminhtml>    
</config>
